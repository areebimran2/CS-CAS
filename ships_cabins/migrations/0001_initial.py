# Generated by Django 5.2.6 on 2025-09-20 14:18

import common.fields
import common.functions
import django.contrib.postgres.functions
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_pg_enumerated_types'),
        ('catalogs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ship',
            fields=[
                ('id', models.UUIDField(db_default=django.contrib.postgres.functions.RandomUUID(), primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('operator', models.TextField(null=True)),
                ('contact_person', models.TextField(null=True)),
                ('address', models.JSONField(null=True)),
                ('is_archived', models.BooleanField(db_default=False)),
                ('created_at', models.DateTimeField(db_default=common.functions.TxNow())),
                ('updated_at', models.DateTimeField(db_default=common.functions.TxNow())),
            ],
            options={
                'db_table': 'ships',
            },
        ),
        migrations.CreateModel(
            name='Cabin',
            fields=[
                ('id', models.UUIDField(db_default=django.contrib.postgres.functions.RandomUUID(), primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('number', models.TextField()),
                ('deck', models.TextField(null=True)),
                ('is_archived', models.BooleanField(db_default=False)),
                ('created_at', models.DateTimeField(db_default=common.functions.TxNow())),
                ('updated_at', models.DateTimeField(db_default=common.functions.TxNow())),
                ('category', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.RESTRICT, to='catalogs.cabincategory')),
                ('ship', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.RESTRICT, to='ships_cabins.ship')),
            ],
            options={
                'db_table': 'cabins',
            },
        ),
        migrations.CreateModel(
            name='CabinMap',
            fields=[
                ('id', models.UUIDField(db_default=django.contrib.postgres.functions.RandomUUID(), primary_key=True, serialize=False)),
                ('version', models.IntegerField()),
                ('status', common.fields.PostgresEnumField(choices=[('draft', 'Draft'), ('active', 'Active'), ('archived', 'Archived')], db_default='draft', enum_type='map_status')),
                ('svg_url', models.TextField(null=True)),
                ('raster_url', models.TextField(null=True)),
                ('notes', models.TextField(null=True)),
                ('created_at', models.DateTimeField(db_default=common.functions.TxNow())),
                ('updated_at', models.DateTimeField(db_default=common.functions.TxNow())),
                ('ship', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.RESTRICT, to='ships_cabins.ship')),
            ],
            options={
                'db_table': 'cabin_maps',
            },
        ),
        migrations.CreateModel(
            name='ShipAmenity',
            fields=[
                ('pk', models.CompositePrimaryKey('ship_id', 'amenity_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('amenity', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.RESTRICT, to='catalogs.amenity')),
                ('ship', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='ships_cabins.ship')),
            ],
            options={
                'db_table': 'ship_amenities',
            },
        ),
        migrations.AddField(
            model_name='ship',
            name='amenities',
            field=models.ManyToManyField(related_name='ship_amenities', through='ships_cabins.ShipAmenity', to='catalogs.amenity'),
        ),
        migrations.CreateModel(
            name='ShipCurrency',
            fields=[
                ('currency', models.CharField(max_length=3)),
                ('pk', models.CompositePrimaryKey('ship_id', 'currency', blank=True, editable=False, primary_key=True, serialize=False)),
                ('ship', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='ships_cabins.ship')),
            ],
            options={
                'db_table': 'ship_currencies',
            },
        ),
        migrations.CreateModel(
            name='CabinMapZone',
            fields=[
                ('id', models.UUIDField(db_default=django.contrib.postgres.functions.RandomUUID(), primary_key=True, serialize=False)),
                ('polygon', models.JSONField()),
                ('cabin', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.RESTRICT, to='ships_cabins.cabin')),
                ('map', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='ships_cabins.cabinmap')),
            ],
            options={
                'db_table': 'cabin_zones',
                'indexes': [models.Index(fields=['map'], name='idx_cabin_zones_map')],
            },
        ),
        migrations.AddConstraint(
            model_name='cabinmap',
            constraint=models.UniqueConstraint(fields=('ship', 'version'), name='cabin_maps_ship_id_version_key'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cabinmap',
            trigger=pgtrigger.compiler.Trigger(name='trg_cabin_maps_updated', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n            BEGIN\n                NEW.updated_at := NOW();\n                RETURN NEW;\n            END;\n            ', hash='f1adc21c0965abbd1d138e40727e4eb50d371fdb', operation='UPDATE', pgid='pgtrigger_trg_cabin_maps_updated_d4195', table='cabin_maps', when='BEFORE')),
        ),
        migrations.AddIndex(
            model_name='cabin',
            index=models.Index(fields=['ship'], name='idx_cabins_ship'),
        ),
        migrations.AddConstraint(
            model_name='cabin',
            constraint=models.UniqueConstraint(fields=('ship', 'number'), name='cabins_ship_id_number_key'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='cabin',
            trigger=pgtrigger.compiler.Trigger(name='trg_cabins_updated', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n            BEGIN\n                NEW.updated_at := NOW();\n                RETURN NEW;\n            END;\n            ', hash='00620cbfd17972dd9398f539254fa927bdd6066c', operation='UPDATE', pgid='pgtrigger_trg_cabins_updated_48cb8', table='cabins', when='BEFORE')),
        ),
        migrations.AddConstraint(
            model_name='ship',
            constraint=models.UniqueConstraint(fields=('name',), name='ships_name_key'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='ship',
            trigger=pgtrigger.compiler.Trigger(name='trg_ships_updated', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n            BEGIN\n                NEW.updated_at := NOW();\n                RETURN NEW;\n            END;\n            ', hash='adcd10a7978e0cee1c739280ae222e44a4b75d5c', operation='UPDATE', pgid='pgtrigger_trg_ships_updated_df1e1', table='ships', when='BEFORE')),
        ),
        migrations.AddConstraint(
            model_name='shipcurrency',
            constraint=models.CheckConstraint(condition=models.Q(('currency__regex', '^[A-Z]{3}$')), name='ship_currencies_currency_check'),
        ),
    ]
