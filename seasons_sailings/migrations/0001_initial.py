# Generated by Django 5.2.6 on 2025-09-20 21:14

import common.functions
import django.contrib.postgres.constraints
import django.contrib.postgres.fields.ranges
import django.contrib.postgres.functions
import django.db.models.deletion
import django.db.models.expressions
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('routes', '0001_initial'),
        ('ships_cabins', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.UUIDField(db_default=django.contrib.postgres.functions.RandomUUID(), primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('default_margin_b2b', models.DecimalField(decimal_places=4, max_digits=6)),
                ('default_margin_b2c', models.DecimalField(decimal_places=4, max_digits=6)),
                ('is_archived', models.BooleanField(db_default=False)),
                ('created_at', models.DateTimeField(db_default=common.functions.TxNow())),
                ('updated_at', models.DateTimeField(db_default=common.functions.TxNow())),
            ],
            options={
                'db_table': 'seasons',
            },
        ),
        migrations.CreateModel(
            name='SeasonShip',
            fields=[
                ('pk', models.CompositePrimaryKey('season_id', 'ship_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('season', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.CASCADE, to='seasons_sailings.season')),
                ('ship', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.RESTRICT, to='ships_cabins.ship')),
            ],
            options={
                'db_table': 'season_ships',
            },
        ),
        migrations.AddField(
            model_name='season',
            name='ships',
            field=models.ManyToManyField(related_name='season_ships', through='seasons_sailings.SeasonShip', to='ships_cabins.ship'),
        ),
        migrations.CreateModel(
            name='Sailing',
            fields=[
                ('id', models.UUIDField(db_default=django.contrib.postgres.functions.RandomUUID(), primary_key=True, serialize=False)),
                ('departure_date', models.DateField()),
                ('nights', models.IntegerField()),
                ('created_at', models.DateTimeField(db_default=common.functions.TxNow())),
                ('updated_at', models.DateTimeField(db_default=common.functions.TxNow())),
                ('route', models.ForeignKey(db_index=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='routes.route')),
                ('ship', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.RESTRICT, to='ships_cabins.ship')),
                ('season', models.ForeignKey(db_index=False, on_delete=django.db.models.deletion.RESTRICT, to='seasons_sailings.season')),
            ],
            options={
                'db_table': 'sailings',
                'indexes': [models.Index(fields=['ship'], name='idx_sailings_ship'), models.Index(fields=['season'], name='idx_sailings_season')],
                'constraints': [models.CheckConstraint(condition=models.Q(('nights__gt', 0)), name='sailings_nights_check'), django.contrib.postgres.constraints.ExclusionConstraint(expressions=[(models.F('ship'), '='), (models.Func(models.F('departure_date'), django.db.models.expressions.CombinedExpression(models.F('departure_date'), '+', models.F('nights')), models.Value('[)'), function='daterange', output_field=django.contrib.postgres.fields.ranges.DateRangeField()), '&&')], name='sailings_no_overlap_per_ship')],
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='sailing',
            trigger=pgtrigger.compiler.Trigger(name='trg_sailings_updated', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n            BEGIN\n                NEW.updated_at := NOW();\n                RETURN NEW;\n            END;\n            ', hash='b5b25e0df86a4c7434465d791c9472f211dc78ce', operation='UPDATE', pgid='pgtrigger_trg_sailings_updated_2bb19', table='sailings', when='BEFORE')),
        ),
        migrations.AddConstraint(
            model_name='season',
            constraint=models.UniqueConstraint(fields=('name',), name='seasons_name_key'),
        ),
        migrations.AddConstraint(
            model_name='season',
            constraint=models.CheckConstraint(condition=models.Q(('start_date__lte', models.F('end_date'))), name='season_nonempty'),
        ),
        migrations.AddConstraint(
            model_name='season',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=[(models.Func(models.F('start_date'), django.db.models.expressions.CombinedExpression(models.F('end_date'), '+', models.Value(1)), models.Value('[)'), function='daterange', output_field=django.contrib.postgres.fields.ranges.DateRangeField()), '&&')], name='seasons_no_overlap'),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='season',
            trigger=pgtrigger.compiler.Trigger(name='trg_seasons_updated', sql=pgtrigger.compiler.UpsertTriggerSql(func='\n            BEGIN\n                NEW.updated_at := NOW();\n                RETURN NEW;\n            END;\n            ', hash='5de6f7d21034a8c499634090c1838399a1bdf565', operation='UPDATE', pgid='pgtrigger_trg_seasons_updated_fbdcc', table='seasons', when='BEFORE')),
        ),
    ]
