# Generated by Django 5.2.6 on 2025-09-27 21:09

import common.functions
import django.contrib.postgres.functions
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('selling', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExchangeRatesManual',
            fields=[
                ('id', models.UUIDField(db_default=django.contrib.postgres.functions.RandomUUID(), primary_key=True, serialize=False)),
                ('base', models.CharField(max_length=3)),
                ('quote', models.CharField(max_length=3)),
                ('rate', models.DecimalField(decimal_places=8, max_digits=18)),
                ('updated_at', models.DateTimeField(db_default=common.functions.TxNow())),
            ],
            options={
                'db_table': 'exchange_rates_manual',
                'constraints': [models.CheckConstraint(condition=models.Q(('base__regex', '^[A-Z]{3}$')), name='exchange_rates_manual_base_check'), models.CheckConstraint(condition=models.Q(('quote__regex', '^[A-Z]{3}$')), name='exchange_rates_manual_quote_check'), models.CheckConstraint(condition=models.Q(('rate__gt', models.Value(0))), name='exchange_rates_manual_rate_check'), models.UniqueConstraint(fields=('base', 'quote'), name='exchange_rates_manual_base_quote_key')],
            },
        ),
        migrations.CreateModel(
            name='FXRatesCache',
            fields=[
                ('id', models.UUIDField(db_default=django.contrib.postgres.functions.RandomUUID(), primary_key=True, serialize=False)),
                ('provider', models.TextField()),
                ('base', models.CharField(max_length=3)),
                ('quote', models.CharField(max_length=3)),
                ('rate', models.DecimalField(decimal_places=8, max_digits=18)),
                ('fetched_at', models.DateTimeField(db_default=common.functions.TxNow())),
            ],
            options={
                'db_table': 'fx_rates_cache',
                'constraints': [models.CheckConstraint(condition=models.Q(('base__regex', '^[A-Z]{3}$')), name='fx_rates_cache_base_check'), models.CheckConstraint(condition=models.Q(('quote__regex', '^[A-Z]{3}$')), name='fx_rates_cache_quote_check'), models.CheckConstraint(condition=models.Q(('rate__gt', models.Value(0))), name='fx_rates_cache_rate_check'), models.UniqueConstraint(fields=('provider', 'base', 'quote'), name='fx_rates_cache_provider_base_quote_key')],
            },
        ),
    ]
